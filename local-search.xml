<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2025/07/31/02%20%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8/"/>
    <url>/2025/07/31/02%20%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E7%9A%84%E4%BD%9C%E7%94%A8/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>从0开始搭建个人博客</title>
    <link href="/2025/07/30/00%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/07/30/00%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="前置环境准备"><a href="#前置环境准备" class="headerlink" title="前置环境准备"></a>前置环境准备</h1>]]></content>
    
    
    <categories>
      
      <category>Win Dev Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Personal Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows VPN代理 &amp; WSL2 VPN代理 配置</title>
    <link href="/2025/07/30/01%20Windows%20VPN%E4%BB%A3%E7%90%86%20&amp;%20WSL2%20VPN%E4%BB%A3%E7%90%86%20%E9%85%8D%E7%BD%AE/"/>
    <url>/2025/07/30/01%20Windows%20VPN%E4%BB%A3%E7%90%86%20&amp;%20WSL2%20VPN%E4%BB%A3%E7%90%86%20%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Windows-VPN代理"><a href="#Windows-VPN代理" class="headerlink" title="Windows VPN代理"></a>Windows VPN代理</h1><p>此部分内容仅为实用考虑，不追究具体细节</p><p>注：ping不成功≠代理不成功，可以采用 <code>wget www.google.com</code> 测试代理是否成功。</p><h2 id="安装Clash-for-Windows"><a href="#安装Clash-for-Windows" class="headerlink" title="安装Clash for Windows"></a>安装Clash for Windows</h2><p>软件网址：<a href="https://github.com/clash-download/clash-for-windows/releases">Clash for Windows</a></p><p>代理服务商：<a href="https://www.v2ny.de/#/stage/dashboard">奈云</a></p><h3 id="设置-Clash"><a href="#设置-Clash" class="headerlink" title="设置 Clash"></a>设置 Clash</h3><p>使能Allow LAN开关，并且配置Port端口，如图Port为7890<br><img src="/img/01/0.png" alt="设置 Clash"></p><h3 id="配置终端脚本"><a href="#配置终端脚本" class="headerlink" title="配置终端脚本"></a>配置终端脚本</h3><p>可以在C盘创建一个bat文件，内容如下：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br>:: proxy.bat - Simple proxy manager <span class="hljs-keyword">for</span> <span class="hljs-built_in">CMD</span><br>:: Usage: proxy.bat on | off | show<br><br><span class="hljs-built_in">setlocal</span><br><br><span class="hljs-built_in">set</span> &quot;PROXY_ADDR=<span class="hljs-number">127</span>.<span class="hljs-number">0</span>.<span class="hljs-number">0</span>.<span class="hljs-number">1</span>&quot;<br><span class="hljs-built_in">set</span> &quot;PROXY_PORT=<span class="hljs-number">7890</span>&quot;<br><span class="hljs-built_in">set</span> &quot;PROXY_URL=http://<span class="hljs-variable">%PROXY_ADDR%</span>:<span class="hljs-variable">%PROXY_PORT%</span>&quot;<br><br>:: 检查参数<br><span class="hljs-keyword">if</span> &quot;%<span class="hljs-number">1</span>&quot;==&quot;&quot; <span class="hljs-keyword">goto</span> usage<br><span class="hljs-keyword">if</span> /i &quot;%<span class="hljs-number">1</span>&quot;==&quot;on&quot; <span class="hljs-keyword">goto</span> enable_proxy<br><span class="hljs-keyword">if</span> /i &quot;%<span class="hljs-number">1</span>&quot;==&quot;off&quot; <span class="hljs-keyword">goto</span> disable_proxy<br><span class="hljs-keyword">if</span> /i &quot;%<span class="hljs-number">1</span>&quot;==&quot;show&quot; <span class="hljs-keyword">goto</span> show_proxy<br><br>:: 未知命令<br><span class="hljs-built_in">echo</span> Error: Unknown command &#x27;%<span class="hljs-number">1</span>&#x27;. Use &#x27;on&#x27;, &#x27;off&#x27;, or &#x27;show&#x27;.<br><span class="hljs-keyword">exit</span> /b <span class="hljs-number">1</span><br><br>:usage<br><span class="hljs-built_in">echo</span> Usage: %~n0 on ^| off ^| show<br><span class="hljs-built_in">echo</span>   %~n0 on     - Enable proxy (<span class="hljs-built_in">set</span> http_proxy and https_proxy)<br><span class="hljs-built_in">echo</span>   %~n0 off    - Disable proxy (unset http_proxy and https_proxy)<br><span class="hljs-built_in">echo</span>   %~n0 show   - Show current proxy settings<br><span class="hljs-keyword">exit</span> /b <span class="hljs-number">1</span><br><br>:enable_proxy<br>    setx http_proxy &quot;<span class="hljs-variable">%PROXY_URL%</span>&quot; &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>    setx https_proxy &quot;<span class="hljs-variable">%PROXY_URL%</span>&quot; &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>    <span class="hljs-built_in">set</span> &quot;http_proxy=<span class="hljs-variable">%PROXY_URL%</span>&quot;<br>    <span class="hljs-built_in">set</span> &quot;https_proxy=<span class="hljs-variable">%PROXY_URL%</span>&quot;<br>    <span class="hljs-built_in">echo</span> Proxy enabled: <span class="hljs-variable">%PROXY_URL%</span><br>    <span class="hljs-keyword">goto</span> :eof<br><br>:disable_proxy<br>    setx http_proxy &quot;&quot; &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>    setx https_proxy &quot;&quot; &gt;<span class="hljs-built_in">nul</span> <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span><br>    <span class="hljs-built_in">set</span> &quot;http_proxy=&quot;<br>    <span class="hljs-built_in">set</span> &quot;https_proxy=&quot;<br>    <span class="hljs-built_in">echo</span> Proxy disabled.<br>    <span class="hljs-keyword">goto</span> :eof<br><br>:show_proxy<br>    <span class="hljs-built_in">echo</span>.<br>    <span class="hljs-built_in">echo</span> Current session settings:<br>    <span class="hljs-built_in">echo</span> -------------------------<br>    <span class="hljs-built_in">echo</span> HTTP Proxy: <span class="hljs-variable">%http_proxy%</span><br>    <span class="hljs-built_in">echo</span> HTTPS Proxy: <span class="hljs-variable">%https_proxy%</span><br>    <span class="hljs-built_in">echo</span>.<br>    <span class="hljs-keyword">goto</span> :eof<br><br>:eof<br></code></pre></td></tr></table></figure><p>然后，将存放该bat文件的目录添加到系统环境变量中方便后续在终端中调用。</p><h1 id="WSL2-使用-Windows-Clash代理"><a href="#WSL2-使用-Windows-Clash代理" class="headerlink" title="WSL2 使用 Windows Clash代理"></a>WSL2 使用 Windows Clash代理</h1><h3 id="设置防火墙规则"><a href="#设置防火墙规则" class="headerlink" title="设置防火墙规则"></a>设置防火墙规则</h3><p>打开防火墙设置<br><img src="/img/01/1.png" alt="打开防火墙设置"></p><p>创建如下的入站规则，端口与Clash for Windows配置的端口一致<br><img src="/img/01/2.png" alt="新建入站规则"></p><h3 id="设置WSL2"><a href="#设置WSL2" class="headerlink" title="设置WSL2"></a>设置WSL2</h3><p>在菜单栏搜索WSL Setting，如下图，将网络模式改为Mirrored<br><img src="/img/01/3.png" alt="WSL Setting"></p><h3 id="启动WSL2"><a href="#启动WSL2" class="headerlink" title="启动WSL2"></a>启动WSL2</h3><p>编写Bash脚本，内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br><span class="hljs-comment"># proxy.sh - Simple proxy manager for Linux/Unix shell</span><br><span class="hljs-comment"># Usage: source proxy.sh  (or . proxy.sh), then use: proxy on | off | show</span><br><br>PROXY_ADDR=<span class="hljs-string">&quot;127.0.0.1&quot;</span><br>PROXY_PORT=<span class="hljs-string">&quot;7890&quot;</span><br>HTTP_PROXY_URL=<span class="hljs-string">&quot;http://<span class="hljs-variable">$&#123;PROXY_ADDR&#125;</span>:<span class="hljs-variable">$&#123;PROXY_PORT&#125;</span>&quot;</span><br>HTTPS_PROXY_URL=<span class="hljs-string">&quot;http://<span class="hljs-variable">$&#123;PROXY_ADDR&#125;</span>:<span class="hljs-variable">$&#123;PROXY_PORT&#125;</span>&quot;</span><br>NO_PROXY=<span class="hljs-string">&quot;localhost,127.0.0.1,::1&quot;</span><br><br><span class="hljs-function"><span class="hljs-title">proxy_on</span></span>() &#123;<br>    <span class="hljs-built_in">export</span> http_proxy=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;HTTP_PROXY_URL&#125;</span>&quot;</span><br>    <span class="hljs-built_in">export</span> https_proxy=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;HTTPS_PROXY_URL&#125;</span>&quot;</span><br>    <span class="hljs-built_in">export</span> HTTP_PROXY=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;HTTP_PROXY_URL&#125;</span>&quot;</span><br>    <span class="hljs-built_in">export</span> HTTPS_PROXY=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;HTTPS_PROXY_URL&#125;</span>&quot;</span><br>    <span class="hljs-built_in">export</span> ALL_PROXY=<span class="hljs-string">&quot;socks5://<span class="hljs-variable">$&#123;PROXY_ADDR&#125;</span>:<span class="hljs-variable">$&#123;PROXY_PORT&#125;</span>&quot;</span><br>    <span class="hljs-built_in">export</span> no_proxy=<span class="hljs-string">&quot;<span class="hljs-variable">$&#123;NO_PROXY&#125;</span>&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Proxy enabled:&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  http_proxy  = <span class="hljs-variable">$&#123;http_proxy&#125;</span>&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  https_proxy = <span class="hljs-variable">$&#123;https_proxy&#125;</span>&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  all_proxy    = <span class="hljs-variable">$&#123;ALL_PROXY&#125;</span>&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  no_proxy    = <span class="hljs-variable">$&#123;no_proxy&#125;</span>&quot;</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">proxy_off</span></span>() &#123;<br>    <span class="hljs-built_in">unset</span> http_proxy<br>    <span class="hljs-built_in">unset</span> https_proxy<br>    <span class="hljs-built_in">unset</span> HTTP_PROXY<br>    <span class="hljs-built_in">unset</span> HTTPS_PROXY<br>    <span class="hljs-built_in">unset</span> ALL_PROXY<br>    <span class="hljs-built_in">unset</span> no_proxy<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Proxy disabled.&quot;</span><br>&#125;<br><br><span class="hljs-function"><span class="hljs-title">proxy_show</span></span>() &#123;<br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Current proxy environment variables:&quot;</span><br>    <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;-----------------------------------&quot;</span><br>    <span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;http_proxy&#125;</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;http_proxy  = <span class="hljs-variable">$&#123;http_proxy&#125;</span>&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;http_proxy  = NOT SET&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;https_proxy&#125;</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;https_proxy = <span class="hljs-variable">$&#123;https_proxy&#125;</span>&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;https_proxy = NOT SET&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;ALL_PROXY&#125;</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;ALL_PROXY = <span class="hljs-variable">$&#123;ALL_PROXY&#125;</span>&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;ALL_PROXY = NOT SET&quot;</span><br>    <span class="hljs-keyword">fi</span><br>    <span class="hljs-keyword">if</span> [[ -n <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;no_proxy&#125;</span>&quot;</span> ]]; <span class="hljs-keyword">then</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;no_proxy    = <span class="hljs-variable">$&#123;no_proxy&#125;</span>&quot;</span><br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;no_proxy    = NOT SET&quot;</span><br>    <span class="hljs-keyword">fi</span><br>&#125;<br><br><span class="hljs-keyword">case</span> <span class="hljs-string">&quot;<span class="hljs-variable">$&#123;1&#125;</span>&quot;</span> <span class="hljs-keyword">in</span><br>    on|start|<span class="hljs-built_in">enable</span>)<br>        proxy_on<br>        ;;<br>    off|stop|<span class="hljs-built_in">disable</span>)<br>        proxy_off<br>        ;;<br>    show|status)<br>        proxy_show<br>        ;;<br>    *)<br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;Usage: proxy on|off|show&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  proxy on     - Enable proxy settings&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  proxy off    - Disable proxy settings&quot;</span><br>        <span class="hljs-built_in">echo</span> <span class="hljs-string">&quot;  proxy show   - Show current proxy settings&quot;</span><br>        <span class="hljs-built_in">return</span> 0 2&gt;/dev/null || <span class="hljs-built_in">exit</span> 0<br>        ;;<br><span class="hljs-keyword">esac</span><br></code></pre></td></tr></table></figure><p>接着，在.bashrc文件中添加如下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">source</span> ~/proxy.sh<br><span class="hljs-built_in">chmod</span> +x ~/proxy.sh<br></code></pre></td></tr></table></figure><h3 id="终端开启"><a href="#终端开启" class="headerlink" title="终端开启"></a>终端开启</h3><p>输入<code>~/proxy.sh on</code>开启代理</p><h3 id="测试代理"><a href="#测试代理" class="headerlink" title="测试代理"></a>测试代理</h3><p>输入<code>curl -I www.google.com</code></p><p><img src="/img/01/4.png" alt="测试结果"></p><p>如果开启代理后，测试无响应，可以在windows终端输入<code>wsl --shutdown</code>重启WsL，一般重启后就能正常访问了。</p>]]></content>
    
    
    <categories>
      
      <category>Win Dev Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>VPN</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
